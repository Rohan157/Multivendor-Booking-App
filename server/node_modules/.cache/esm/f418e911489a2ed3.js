let User;_489‍.x([["register",()=>register],["login",()=>login]]);_489‍.w("../models/user",[["default",["User"],function(v){User=v}]]);

// export const showMessage = (req, res) => {
//   res.status(200).send(`Here is your message: ${req.params.message}`);
// };

       const register = async (req, res) => {
  //firstly you should check whether you are recieving data in backend or not
  _489‍.g.console.log(req.body);
  const { name, email, password } = req.body;
  //Validation
  if (!name) return res.status(400).send("Name is required");
  if (!password || password.length < 6)
    return res.status(400).send("Min 6 character password");
  //now for email we have to query database to verify that the email is unique and doesn't exist in db before
  let userExist = await User.findOne({ email }).exec();
  if (userExist) return res.status(400).send("Email is taken");
  //If ecerything clear then now we register the user
  const user = new User(req.body);
  try {
    await user.save();
    _489‍.g.console.log("USER CREATED", user);
    return res.json({ ok: true });
  } catch (err) {
    _489‍.g.console.log("CREATE USER FAILED", err);
    return res.status(400).send("Error. Try again.");
  }
};

       const login = async (req, res) => {
  // console.log(req.body);
  const { email, password } = req.body;
  try {
    let user = await User.findOne({ email }).exec();
    // console.log("USER EXIST", user);
    if (!user) res.status(400).send("User with that email not found");
    //compare password
    //we have access to user.comparePassword function cuz we have written it in user model
    user.comparePassword(password, (err, match) => {
      _489‍.g.console.log("COMPARE PASSWORD IN LOGIN ERR", err);
      if (!match || err) return res.status(400).send("Wrong password");
      console.log("GENERATE A TOKEN AND THEN SEND IT AS A RESPONSE TO CLIENT");
    });
  } catch (err) {
    _489‍.g.console.log("LOGIN ERROR", err);
    res.status(400).send("Signin failed");
  }
};
